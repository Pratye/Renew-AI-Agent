# LLM Provider Configuration
# Using GroQ as OpenAI-compatible API
OPENAI_API_KEY=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
OPENAI_BASE_URL=https://api.groq.com/openai/v1
OPENAI_MODEL=mixtral-8x7b-32768

# Claude Configuration (Optional)
# Uncomment and set a valid API key to use Claude
# ANTHROPIC_API_KEY=your-anthropic-api-key
# ANTHROPIC_MODEL=claude-3-opus-20240229

# MCP Server Configuration
MCP_SERVER_URL=http://localhost:5002
MCP_SERVER_SCRIPT_PATH=/Users/pratyeaggarwal/PycharmProjects/AI_OS/AI_OS/renewable_energy_consultant/mcp_server/server.py
MCP_CLIENT_ID=renewable_energy_app
MCP_CLIENT_SECRET=mcp_secret_2024_renewable_energy_consultant_secure

# MongoDB Configuration (using in-memory storage instead)
# MONGODB_URI=mongodb://localhost:27017/
# MONGODB_DB=renewable_energy_consultant

# JWT Configuration
JWT_SECRET_KEY=renewable_energy_consultant_secret_key_2024
JWT_ACCESS_TOKEN_EXPIRES=604800  # 7 days in seconds

# Data Source API Keys (mock data is used if these are not valid)
EIA_API_KEY=mock_eia_api_key
SOLARGIS_API_KEY=mock_solargis_api_key
WINDEUROPE_API_KEY=mock_windeurope_api_key

# Server Configuration
SERVER_HOST=0.0.0.0
SERVER_PORT=5002
DEBUG=True

# Flask Configuration
FLASK_APP=app.py
FLASK_ENV=development
FLASK_SECRET_KEY=renewable_energy_consultant_flask_secret_2024
FLASK_DEBUG=True

# Vector Store Configuration
VECTOR_STORE_PATH=data/vector_store

